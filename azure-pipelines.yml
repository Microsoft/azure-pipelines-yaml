# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

stages:
- stage: Build
  jobs:
  - job: docker_build
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:    
    - script: echo build and push to docker!

- stage: Dev
  dependsOn: Build
  jobs:
  - job: Deploy_to_Review_Resource
    condition: and(succeeded(), startswith(variables['Build.SourceBranch'], 'refs/pull/'))
    pool:
      vmImage: 'Ubuntu 16.04'
    steps: 
    - script: echo deploying to review resource...
  - job: Deploy_to_Dev_Resource
    condition: and(succeeded(), startswith(variables['Build.SourceBranch'], 'refs/heads/'))
    pool:
      vmImage: 'Ubuntu 16.04'
    steps: 
    - script: echo deploying to dev resource...

- stage: Prod
  dependsOn: dev
  jobs:
  - deployment: deploy_to_prod    
    pool:
      vmImage: 'Ubuntu 16.04'
    environment: production    # create environment and/or record deployments
    strategy:                  # runOnce/blue green/rolling/canary, with lifecycle hooks viz, pre/post healthcheck, swap etc
      runOnce:                 # default strategy
        deploy:
          steps:       
          - script: echo deploy to prod environement


