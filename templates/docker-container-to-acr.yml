# Docker image and Azure container registry
# Build a Docker image and push to a container registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

resources:
- repo: self

variables:
  # Update Azure.CreateResources to false if you have already created resources.
  Azure.CreateResources: 'true'

  # Update Azure.ServiceConnectionId value if you want to use a different AzureRm service endpoint
  Azure.ServiceConnectionId: '$(Definition.Azure.ServiceConnectionId)'

  # Update Azure.ResourceGroupName value if you want to use a different resource group name. if Azure.CreateResources=true then resource group will be created automatically.
  Azure.ResourceGroupName: '$(Definition.Azure.ResourceGroupName)'

  # Update Azure.Location value if you want to use a different Azure location.
  Azure.Location: '$(Definition.Azure.Location)'

  # Update ACR values if you want to use a different names. Please note ACR names should be all lower-case and alphanumeric only.
  # if Azure.CreateResources=true then ACR will be created automatically.
  ACR.Name: '$(Definition.ACR.Name)'
  ACR.RepositoryName: '$(Definition.ACR.Name)'
  ACR.ImageName: '$(ACR.Name):$(Build.BuildId)'
  ACR.FullName: '$(ACR.Name).azurecr.io'
  ACR.Sku: '$(Definition.ACR.Sku)'

  System.Debug: 'false'

phases:

- phase: Phase_1
  displayName: Create resources
  condition: and(succeeded(), eq(variables['Azure.CreateResources'], 'true'))

  queue:
    name: Hosted Ubuntu 1604

  steps:
  - task: AzureCLI@1
    displayName: 'Create resources if required'
    inputs:
      connectedServiceNameARM: '$(Azure.ServiceConnectionId)'
      scriptLocation: inlineScript
      inlineScript: |
        #!/bin/bash
        RGExists=$(az group exists --name $(Azure.ResourceGroupName))
        echo "RG exists: $RGExists"
        if [ $RGExists = false ]
        then
          CREATED_RG=$(az group create --name $(Azure.ResourceGroupName) --location $(Azure.Location))
          echo "$CREATED_RG"
        fi
        CREATE_ACR=$(az acr check-name -n $(ACR.Name) --query nameAvailable)
        echo "Create ACR: $CREATE_ACR"
        if [ $CREATE_ACR = true ]
        then
          CREATED_ACR=$(az acr create -n $(ACR.Name) -g $(Azure.ResourceGroupName) --sku $(ACR.Sku))
          echo "$CREATED_ACR"
        fi

- phase: Phase_2
  displayName: Build
  dependsOn: Phase_1
  condition: or(succeeded(), ne(variables['Azure.CreateResources'], 'true'))

  queue:
    name: Hosted Ubuntu 1604

  steps:
  - task: Docker@0
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
      containerregistrytype: 'Azure Container Registry'
      azureContainerRegistry: '$(ACR.FullName)'
      imageName: '$(ACR.ImageName)'
      action: 'Build an image'
      dockerFile": '**/Dockerfile'

  - task: Docker@0
    displayName: 'Push an image'
    inputs:
      azureSubscription: '$(Azure.ServiceConnectionId)'
      azureContainerRegistry: '$(ACR.FullName)'
      action: 'Push an image'
      imageName: '$(ACR.ImageName)'