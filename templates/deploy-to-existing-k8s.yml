# Deploy to Kubernetes
# Build a Docker image, push to an Azure Container Registry, and deploy it to Azure Kubernetes Service.
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation - Docker Hub/ACR/...
  dockerRegistryServiceConnection: '{{ containerRegistryConnection.Id }}'
  imageName: '{{ imageName }}'
  containerRegistryName: '{{ containerRegistryName }}.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  
  # Kubernetes Namespace
  k8sNamespace: '{{ environment.Resources.kubernetesConnection.Namespace }}'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageName)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy to Kubernetes
    displayName: Deploy job
    environment: {{ environment.Environment.Name }}.{{ environment.Resources.kubernetesConnection.Name }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: kubectl create imagepullsecret docker-auth
            inputs:
              action: createSecret
              secretName: docker-auth
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: |
                manifests/*
              containers: |
                $(containerRegistryName)/$(imageName)
